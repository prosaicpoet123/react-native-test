// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ProductCard /> renders correctly 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CECECE",
          "borderWidth": 1,
          "minHeight": 300,
          "padding": 4,
        },
        undefined,
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://images.hollandandbarrettimages.co.uk/productimages/HB/180/000001_A.jpg",
            }
          }
          style={
            Array [
              Object {
                "height": 180,
                "width": "100%",
              },
              Object {
                "height": 180,
              },
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "padding": 4,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "marginBottom": 8,
            },
            Object {
              "fontWeight": "bold",
            },
            Object {
              "fontSize": 14,
            },
          ]
        }
      >
        Example Product
      </Text>
    </View>
  </View>
</View>
`;

exports[`<ProductCard /> renders correctly as details 1`] = `
<View
  accessible={true}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    Object {
      "opacity": 1,
    }
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "#FFFFFF",
          "borderColor": "#CECECE",
          "borderWidth": 1,
          "minHeight": 300,
          "padding": 4,
        },
        Object {
          "borderWidth": 0,
        },
      ]
    }
  >
    <View>
      <View
        style={
          Object {
            "position": "relative",
          }
        }
      >
        <Image
          source={
            Object {
              "uri": "https://images.hollandandbarrettimages.co.uk/productimages/HB/180/000001_A.jpg",
            }
          }
          style={
            Array [
              Object {
                "height": 180,
                "width": "100%",
              },
              Object {
                "height": 180,
              },
            ]
          }
        />
      </View>
      <View
        style={
          Object {
            "display": "flex",
            "flexDirection": "row",
            "flexWrap": "wrap",
            "marginVertical": 8,
          }
        }
      >
        <RCTScrollView
          data={Array []}
          disableVirtualization={false}
          getItem={[Function]}
          getItemCount={[Function]}
          horizontal={true}
          initialNumToRender={10}
          keyExtractor={[Function]}
          maxToRenderPerBatch={10}
          onContentSizeChange={[Function]}
          onEndReachedThreshold={2}
          onLayout={[Function]}
          onMomentumScrollEnd={[Function]}
          onScroll={[Function]}
          onScrollBeginDrag={[Function]}
          onScrollEndDrag={[Function]}
          removeClippedSubviews={false}
          renderItem={[Function]}
          scrollEventThrottle={50}
          stickyHeaderIndices={Array []}
          updateCellsBatchingPeriod={50}
          viewabilityConfigCallbackPairs={Array []}
          windowSize={21}
        >
          <View />
        </RCTScrollView>
      </View>
    </View>
    <View
      style={
        Object {
          "padding": 4,
        }
      }
    >
      <Text
        style={
          Array [
            Object {
              "marginBottom": 8,
            },
            Object {
              "fontWeight": "bold",
            },
            Object {
              "fontSize": 22,
            },
          ]
        }
      >
        Example Product
      </Text>
      <Text
        style={
          Array [
            Object {
              "marginBottom": 8,
            },
            Object {
              "fontSize": 18,
              "fontWeight": "bold",
            },
          ]
        }
      >
        Â£20
      </Text>
    </View>
  </View>
</View>
`;
